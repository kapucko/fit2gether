# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-12-31 00:37
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('min_capacity', models.IntegerField(blank=True)),
                ('max_capacity', models.IntegerField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('private', 'Private'), ('expired', 'Expired')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('display_name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='EventOccurence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('date_from', models.DateTimeField(blank=True, verbose_name='Event starts')),
                ('date_to', models.DateTimeField(blank=True, verbose_name='Event ends')),
                ('day', models.CharField(choices=[('Mon', 'Monday'), ('Tues', 'Tuesday'), ('Wed', 'Wednesday'), ('Thurs', 'Thursday'), ('Fri', 'Friday'), ('Sat', 'Saturday'), ('Sun', 'Sunday')], max_length=20)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('event_start', models.DateTimeField()),
                ('event_end', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_occurence', to='fit2gether_core.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('address', models.CharField(max_length=128)),
                ('gps_coord_x', models.FloatField(blank=True, null=True)),
                ('gps_coord_y', models.FloatField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=128)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_admin', to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(blank=True, related_name='location_editors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReqularEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True)),
                ('min_capacity', models.IntegerField(blank=True)),
                ('max_capacity', models.IntegerField(blank=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reg_event_location', to='fit2gether_core.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('editors', models.ManyToManyField(blank=True, related_name='team_editors', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='team_members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_category', to='fit2gether_core.EventCategory'),
        ),
        migrations.AddField(
            model_name='event',
            name='going',
            field=models.ManyToManyField(blank=True, related_name='event_going', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='invited',
            field=models.ManyToManyField(blank=True, related_name='event_invited', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_location', to='fit2gether_core.Location'),
        ),
        migrations.AddField(
            model_name='event',
            name='not_going',
            field=models.ManyToManyField(blank=True, related_name='event_not_going', to=settings.AUTH_USER_MODEL),
        ),
    ]
